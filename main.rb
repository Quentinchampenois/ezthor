# frozen_string_literal: true

# Thor CLI compiler

require 'yaml'
require 'byebug'

def print_desc(ary)
  return '' if ary.nil? || ary.empty?

  str = ary.select { |obj| obj['default'].nil? }.map { |item| item['name'].upcase }.join(' ')
  " #{str}"
end

def parameters(ary)
  return '' if ary.nil? || ary.empty?

  ary.select { |obj| obj['default'].nil? } + ary.reject { |obj| obj['default'].nil? }
end

def print_params(ary)
  return if ary.nil? || ary.empty?

  params = ary.map { |hash| param_format!(hash) }

  "(#{params.join(', ')})"
end

def param_format!(param_h)
  case param_h['default']
  when nil
    param_h['name'].to_s
  when 'nil', 'true', 'false', true, false
    "#{param_h['name']}=#{param_h['default']}"
  else
    "#{param_h['name']}=\"#{param_h['default']}\""
  end
end

core = YAML.load_file('commands.yml')

defs = core['commands'].map do |key, val|
  p = parameters(val['param'])

  "
  desc \"#{key}#{print_desc(p)}\", \"#{val['description']}\"
  def #{key}#{print_params(p)}
    puts \"#{val['cmd']}\"
  end
"
end

puts "
# Generated by easycli

require 'thor'

# #{core["description"]}
class #{core["name"].camelize} < Thor
  #{defs.join('')}
end

#{core["name"].camelize}.start(ARGV)
"
